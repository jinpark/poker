# -*- coding: utf-8 -*-
# Generated by Django 1.9.5 on 2016-04-07 09:31
from __future__ import unicode_literals

from django.db import migrations, models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('guid', models.CharField(blank=True, default=uuid.uuid4, help_text=b'Unique, externally-friendly identifier for a specific poker game', max_length=36, unique=True)),
                ('pocket_cards', models.CharField(blank=True, help_text=b"Keeping records of the pocket cards the game have dealt with, so the next card generated from the game should never be one of them:) we will limit X=3 players at most in a game for now, so the maximum of cards will be (36+1+2*2+1)*X-1 = 125. '|' will be used as delimiter between players and '$' will be used as delimiter between player guid and his/her pocket cards.for example: <guid_1>$h3h4|<guid_2>$d3d4|<guid_3>$c3c4 represents a game of 3 players each having 2 pocket cards(of course!).", max_length=125)),
                ('community_cards', models.CharField(blank=True, help_text=b"Keeping records of the community cards(0 ~ 5 cards) the game have dealt with using | as the delimiter. so the next card generated from the game should never be one of them:) for example: 'h3|d4|c6|s7' represents 4 cards has been dealt as community card and the current status of a game is in stage of `turn` ", max_length=14)),
                ('players_entered', models.CharField(blank=True, help_text=b"Keeping records of the pocket cards the game have dealt with, so the next card generated from the game should never be one of them:) we will limit X=3 players at most in a game for now, so the maximum of cards will be (36+1+1+1)*X-1 = 125. '|' will be used as delimiter between players and '$' will be used as delimiter between player guid and his/her status.for example: <guid_1>$h3h4|<guid_2>$d3d4|<guid_3>$c3c4 represents a game of 3 players each having 2 pocket cards(of course!).", max_length=125)),
                ('total_num_of_players', models.IntegerField(help_text=b'the total number of players who entered this game Initially.')),
                ('stage', models.CharField(choices=[(b'I', b'pre pocket cards'), (b'P', b'pocket'), (b'F', b'flop'), (b'T', b'turn'), (b'R', b'river')], help_text=b'the current stage of the game. For exameple: F means flop has been dealt with.', max_length=1)),
                ('bets', models.CharField(blank=True, help_text=b'place holder once we feel comfortable with introducing bets', max_length=1000)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('guid', models.CharField(blank=True, default=uuid.uuid4, help_text=b'Unique, externally-friendly identifier for a specific user', max_length=36, unique=True)),
                ('username', models.CharField(help_text=b'Username, for example: bruce lee', max_length=20)),
            ],
        ),
    ]
